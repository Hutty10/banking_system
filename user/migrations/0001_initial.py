# Generated by Django 4.2 on 2023-04-28 13:46

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        choices=[
                            (None, "Unknown"),
                            ("Mr", "Mr"),
                            ("Mrs", "Mrs"),
                            ("Miss", "Miss"),
                            ("Doc", "Doc"),
                            ("Engr", "Engr"),
                            ("Prof", "Prof"),
                        ],
                        max_length=7,
                        verbose_name="Title",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=20, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=20, verbose_name="Last Name"),
                ),
                (
                    "middle_name",
                    models.CharField(max_length=20, verbose_name="Middle Name"),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[(None, "Unknown"), ("M", "Male"), ("F", "Female")],
                        max_length=12,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        verbose_name="Phone Number",
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Date Created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Date Updated"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
    ]
